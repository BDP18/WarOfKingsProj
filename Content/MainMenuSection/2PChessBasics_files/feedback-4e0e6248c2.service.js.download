define(["require", "exports", "angularDependency", "angularDependency", "angular/util/http-post-params-as-form.provider", "lib/angular/cookie", "util/remspect"], function (require, exports, angular) {
    "use strict";
    exports.__esModule = true;
    var module = angular.module("feedback.service", ["ngCookies", "study.http-post-params-as-form"]);
    var TargetUserType;
    (function (TargetUserType) {
        TargetUserType["ANY"] = "ANY";
        TargetUserType["INSTRUCTOR"] = "INSTRUCTOR";
    })(TargetUserType = exports.TargetUserType || (exports.TargetUserType = {}));
    var FeedbackService = (function () {
        function FeedbackService($cookies, $http, $q, httpPostParamsAsFormConfig) {
            this.$cookies = $cookies;
            this.$http = $http;
            this.$q = $q;
            this.httpPostParamsAsFormConfig = httpPostParamsAsFormConfig;
        }
        FeedbackService.prototype.submitFeedback = function (feedback) {
            return this.$http.post("/feedback/submit-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                .then(function (response) {
                return;
            })["catch"](function (response) {
                throw response.data;
            });
        };
        FeedbackService.prototype.submitCancellationFeedback = function (feedback) {
            return this.$http.post("/feedback/submit-cancellation-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                .then(function (response) {
                return;
            })["catch"](function (response) {
                throw response.data;
            });
        };
        FeedbackService.prototype.submitInstantAnswersFeedback = function (feedback) {
            return this.$http.post("/feedback/submit-instant-answer-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                .then(function (response) {
                return;
            })["catch"](function (response) {
                throw response.data;
            });
        };
        FeedbackService.prototype.submitAnswerDrillFeedback = function (feedback) {
            return this.$http.post("/feedback/submit-answer-drill-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                .then(function (response) {
                return;
            })["catch"](function (response) {
                throw response.data;
            });
        };
        FeedbackService.prototype.submitSearchResultsFeedback = function (feedback) {
            return this.$http.post("/feedback/submit-search-results-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                .then(function (response) { return response.data['feedbackId']; })["catch"](function (response) { throw response.data; });
        };
        FeedbackService.prototype.submitStudyGuideFeedback = function (feedback) {
            return this.$http.post("/feedback/submit-study-guide-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                .then(function (response) { return response.data['feedbackId']; })["catch"](function (response) { throw response.data; });
        };
        FeedbackService.prototype.updateFeedback = function (feedback) {
            return this.$http.post("/feedback/update-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                .then(function () { return; })["catch"](function (response) { throw response.data; });
        };
        FeedbackService.prototype.dismissFeedback = function () {
            return this.$http.post("/feedback/dismiss-feedback.ajax", {})
                .then(function (response) {
                return;
            })["catch"](function (response) {
                throw response.data;
            });
        };
        FeedbackService.$inject = ["$cookies", "$http", "$q", "httpPostParamsAsFormConfig"];
        return FeedbackService;
    }());
    exports.FeedbackService = FeedbackService;
    module.service("FeedbackService", FeedbackService);
});

//# sourceMappingURL=feedback.service.js.map
